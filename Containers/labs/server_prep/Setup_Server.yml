---
- hosts: server

### Playbook to get Satellite QCOW and other files on Foundation0.
### This playbook does not make Foundation0 a system that can run Satellite
### Must run "Setup.Content.yml" playbook to setup Foundation0 and the other FoundationX systems.

  tasks:

## Check for RHEL84 Content Directory Existance
    - name: Create /RHEL84
      stat:
        path: /RHEL84
      register: RHEL84_Dir

    - name: Output Directory Status
      debug:
        msg: "The RHEL84 Content directory already exists"
      when: RHEL84_Dir.stat.exists

## Create the RHEL84 directory for mounting the content ISO
    - name: Create /RHEL84 Directory
      file:
        path: /RHEL84
        state: directory
        mode: '0755'
      when: RHEL84_Dir.stat.exists == false


## Mount RHEL84 content ISO
    - name: Mount /RHEL84 Directory
      mount:
        path: /RHEL84
        src: /dev/sr0
        fstype: iso9660
        state: mounted
        opts: ro

## Copy REPOSITORY File
    - name: Copy RHEL8.4 DVD Repo File
      copy:
        src: rhel_dvd.repo
        dest: /etc/yum.repos.d/rhel_dvd.repo

## Modify the /etc/hosts file on Server
    - name: Modify /etc/hosts to have the quay.local on Server
      lineinfile:
        path: /etc/hosts
        regexp: '^172.25.250.251 quay.local quay server server.lab.example.com'
        line: '172.25.250.251 quay.local quay server server.lab.example.com'

## Modify the /etc/hosts file on Workstation
    - name: Modify /etc/hosts to have the quay.local on Workstation
      lineinfile:
        path: /etc/hosts
        regexp: '^172.25.250.251 quay.local quay server server.lab.example.com'
        line: '172.25.250.251 quay.local quay server server.lab.example.com'
      delegate_to: localhost

## Install Bash completion, tree, vim, and other apps
    - name: Install applications
      yum:
        name:
          - bash-completion
          - vim
          - tree
          - firewalld
        state: latest

## Setup and Enable Firewalld
    - name: Enable FirewallD
      systemd:
        name: firewalld
        state: started
        enabled: yes

    - name: Ensure SSH is Enabled
      firewalld:
        service: ssh
        permanent: yes
        state: enabled



## Create Student User with Password and Sudo File
    - name: Create Student User
      user:
        name: student
        state: present
        shell: /bin/bash
        comment: Student User

    - name: Sudo for Student user
      copy:
        content: student ALL=(ALL) NOPASSWD:ALL
        dest: /etc/sudoers.d/student

    - name: Password for Student user
      shell: echo "student" | passwd student --stdin
